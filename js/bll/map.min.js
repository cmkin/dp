define('index', ['jquery', 'tmap', 'turf', 'd3', 'd3SvgOverlay', 'basetmap'],
	function($, tmap, turf, d3, d3SvgOverlay, basetmap) {
		return {
			
			var map;
			var basemap;
			var zoom = 12;
			// var countriesOverlay = new T.D3Overlay(init, redraw);
			var bhjson = 'data/BinhaiNewDistrict.json';
			var center = new T.LngLat(117.654173, 39.032846);
			var site = 'http://bhmap.wenxingkeji.net/';
			
			initialize: function() {
				
				$(function() {

					//初始化地图对象
					basemap = new baseTmap();
					//地图初始化
					map = basemap.initialize("mapDiv");
					//放大缩小
					basemap.zoomControl("rightBOTTOM");
					//比例尺
					//basemap.scaleControl();
					//鹰眼
					//basemap.overviewMapControl();
					//加载滨海json
					basemap.d3GeoJson(bhjson);


					$('.vector').on('click', function(data) {
						basemap.mapTypeControl(2);
					})
					$('.satellite').on('click', function(data) {
						basemap.mapTypeControl(1);
					})

					// d3.json("data/BinhaiNewDistrict.json", function(data) {
					// 	countries = data.features;
					// 	map.addOverLay(countriesOverlay);
					// 	countriesOverlay.bringToBack()
					// });

					$('#searchBtn').on('click', function(data) {
						var key = $('#name1').val();
						if (key != '') {
							searchNearby(key, function(data) {
								document.getElementById("uls").innerHTML = "";
								pois(data.getPois())
							}, center);
						}

					})

					function pois(obj) {
						removeOverLay();
						if (obj) {
							var divMarker = document.createElement("div");
							var zoomArr = [];
							var dtd = $.Deferred();
							for (var i = 0; i < obj.length; i++) {
								(function(i) {
									var name = obj[i].name;
									var address = obj[i].address;
									var town = obj[i].town;
									var area = obj[i].area;
									var tel = obj[i].tel;
									var lnglatArr = obj[i].lonlat.split(" ");
									var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);
									
									$.getJSON(dataroot, function(data) {
										var Street = '' || '暂无数据';
										var arr = data.features;
										for (var i = 0; i < arr.length; i++) {
											var polygon1 = [];
											var polygon2 = [];
											if (i == 24) {
												for (var j = 0; j < arr[24].geometry.coordinates.length; j++) {
													for (var k = 0; k < arr[24].geometry.coordinates[0][0].length; k++) {
														polygon1.push([arr[24].geometry.coordinates[0][0][k][0], arr[24].geometry.coordinates[0][0][k][1]])
													}
												}
												for (var j = 0; j < arr[24].geometry.coordinates.length; j++) {
													for (var k = 0; k < arr[24].geometry.coordinates[1][0].length; k++) {
														polygon2.push([arr[24].geometry.coordinates[1][0][k][0], arr[24].geometry.coordinates[1][0][k][1]])
													}
												}
											} else if (i == 14) {
												for (var j = 0; j < arr[14].geometry.coordinates.length; j++) {
													for (var k = 0; k < arr[14].geometry.coordinates[0].length; k++) {
														polygon1.push([arr[14].geometry.coordinates[0][k][0], arr[14].geometry.coordinates[0][k][1]])
													}
												}
												for (var j = 0; j < arr[14].geometry.coordinates.length; j++) {
													for (var k = 0; k < arr[14].geometry.coordinates[1].length; k++) {
														polygon2.push([arr[14].geometry.coordinates[1][k][0], arr[14].geometry.coordinates[1][k][1]])
													}
												}
											} else {
												for (var j = 0; j < arr[i].geometry.coordinates.length; j++) {
													for (var k = 0; k < arr[i].geometry.coordinates[0].length; k++) {
														polygon1.push([arr[i].geometry.coordinates[0][k][0], arr[i].geometry.coordinates[0][k][1]])
													}
												}
											}
											var pt = turf.point = ([lnglatArr[0], lnglatArr[1]]);
											var poly = turf.polygon([polygon1]);
											if (turf.booleanPointInPolygon(pt, poly)) {
												Street = arr[i].properties.JZNAME
											}
											if (polygon2.length !== 0) {
												var poly2 = turf.polygon([polygon2]);
												if (turf.booleanPointInPolygon(pt, poly2)) {
													Street = arr[i].properties.JZNAME
												}
											}
										}
										var searcRecord = {};
										searcRecord.key = name;
										searcRecord.address = address;
										searcRecord.street = Street;
										searcRecord.lng = lnglatArr[0];
										searcRecord.lat = lnglatArr[1];
										var markerInfoWin = InfoWindow(searcRecord);
										var marker = new T.Marker(lnglat);
										map.addOverLay(marker);
										$(".tdt-marker-icon").attr('src', 'images/dingwei.png');
										marker.addEventListener("click", function() {
											marker.openInfoWindow(markerInfoWin)
										});
										zoomArr.push(lnglat);
										var ul = document.getElementById("uls");
										var li = document.createElement("li");
										ul.appendChild(li);
										li.classList.add("list-group-itemlist-group-item-actionactive");
										var a = document.createElement("a");
										li.appendChild(a);
										var img = document.createElement("img");
										var div1 = document.createElement("div");
										a.appendChild(div1);
										var span1 = document.createElement("span");
										var div2 = document.createElement("div");
										a.appendChild(div2);
										var div3 = document.createElement("div");
										a.appendChild(div3);
										div1.classList.add("div1");
										div2.classList.add("div2");
										div3.classList.add("div3");
										span1.classList.add("span1");
										img.src = "images/arrowlist.png";
										div1.appendChild(img);
										div1.appendChild(span1);
										div1.href = "javascript://";
										span1.innerHTML = name;
										a.style.textDecoration = "none";
										div2.innerHTML = "街镇：" + Street;
										div3.innerHTML = "地址：" + address;
										document.getElementById("resultDiv").style.display = "block";
										$(li).on('click', function() {
											removeOverLay();
											var markerInfoWin = InfoWindow(searcRecord);
											var oneMarker = new T.Marker(lnglat);
											map.addOverLay(oneMarker);
											$(".tdt-marker-icon").attr('src', 'images/dingwei.png');
											oneMarker.addEventListener("click", function() {
												oneMarker.openInfoWindow(markerInfoWin)
											})
										});
										a.appendChild(document.createElement("br"))
									})
								})(i)
							}
							map.setViewport(zoomArr);
							document.getElementById("searchDiv").appendChild(divMarker);
							document.getElementById("resultDiv").style.display = "block"
						}
					}

					function searchNearby(keyWord, callback, center, radius) {
						if (center == undefined) {
							center = new T.LngLat(center)
						}
						if (radius == undefined) {
							radius = 5000
						}
						var config = {
							pageCapacity: 100000,
							onSearchComplete: function(data) {
								if (typeof callback == 'function') {
									callback(data)
								}
							}
						};
						map.localsearch = new T.LocalSearch(map, config);
						map.localsearch.searchNearby(keyWord, center, 5000)
					}

					function InfoWindow(searcRecord) {
						var inwindow = '';
						if (searcRecord) {
							var tempJsonStr = JSON.stringify(searcRecord).replace(/\"/g, "'");
							inwindow = '<div class="InfoWindow" ><p>名称：' + searcRecord.key + '</p><p>地址：' + searcRecord.address +
								'</p><p>所属街镇：' +
								searcRecord.street +
								'</p><button type="button" class="btn btn-sm btn-info"  id="remarker" onClick="this.remarker(' +
								tempJsonStr +
								')">重新标点</button><button type="button" class="btn btn-sm btn-success"  id="jietu" onClick="JIETU(' +
								tempJsonStr + ')">保存地址</button></div>'
						}
						var infoWin1 = new T.InfoWindow();
						infoWin1.setContent(inwindow);
						return infoWin1
					}

					function JIETU(searcRecord) {
						html2canvas(document.body).then(canvas => {
							var imgUrl = canvas.toDataURL("image/png", 1);
							var file = dataURLtoFile(imgUrl, "1.png");
							var url = 'http://bhmap.wenxingkeji.net/uploadfile';
							var operatorId = '123';
							var formData = new FormData();
							formData.append("file", file);
							formData.append("operatorId", operatorId);
							$.ajax({
								url: url,
								dataType: "json",
								type: "post",
								data: formData,
								processData: false,
								contentType: false,
								error: function(res) {},
								success: function(res) {
									searcRecord.photo = res;
									url = 'http://bhmap.wenxingkeji.net/Search/SaveSearchrecord';
									$.post(url, searcRecord, function(data) {
										var tempJsonStr = JSON.stringify(data).replace(/\"/g, "'");
										alert(tempJsonStr);
									})
								}
							})
						})
					}

					// function init(sel, transform) {
					// 	var upd = sel.selectAll('path.geojson').data(countries);
					// 	upd.enter().append('path').attr("class", "geojson").attr('stroke', 'black').attr('fill', function(d, i) {
					// 		var color = Math.random() * 360;
					// 		console.log(color);
					// 		return d3.hsl(61, 1, 0.7)
					// 	}).attr('fill-opacity', '0.5')
					// }

					// function redraw(sel, transform) {
					// 	sel.selectAll('path.geojson').each(function(d, i) {
					// 		d3.select(this).attr('d', transform.pathFromGeojson)
					// 	})
					// }

					function removeOverLay() {
						var lays = map.getOverlays();
						for (var i = lays.length - 1; i > 0; i--) {
							if (lays[i].Type = 1000) {
								map.removeOverLay(lays[i])
							}
						}
					}


					function cut(name) {
						html2canvas(document.body, {
							useCORS: true,
							foreignObjectRendering: true,
							allowTaint: false,
						}).then(function(canvas) {
							var img = new Image();
							img.setAttribute("crossOrigin", 'Anonymous');
							var src = canvas.toDataURL("image/png");
							var file = dataURLtoFile(src, "1.png");
							var url = 'http://bhmap.wenxingkeji.net/uploadfile';
							var operatorId = '123';
							var formData = new FormData();
							formData.append("file", file);
							formData.append("operatorId", operatorId);
							$.ajax({
								url: url,
								dataType: "json",
								type: "post",
								data: formData,
								processData: false,
								contentType: false,
								error: function(res) {
									alert(res.desc);
									return
								},
								success: function(res) {
									console.log(res)
								}
							})
						})
					}

					function dataURLtoFile(dataurl, filename) {
						var arr = dataurl.split(','),
							mime = arr[0].match(/:(.*?);/)[1],
							bstr = atob(arr[1]),
							n = bstr.length,
							u8arr = new Uint8Array(n);
						while (n--) {
							u8arr[n] = bstr.charCodeAt(n)
						}
						return new File([u8arr], filename, {
							type: mime
						})
					};

				});

				
			},
			 remarker:function (searcRecord){
				var flag = true;
				removeOverLay();
				map.addEventListener("click", function(e) {
					if (flag) {
						flag = false;
						var marker = new T.Marker(e.lnglat);
						var dataroot = "js/json/Area.json";
						$.getJSON(dataroot, function(data) {
							var Street = '' || '暂无数据';
							var arr = data.features;
							for (var i = 0; i < arr.length; i++) {
								var polygon1 = [];
								var polygon2 = [];
								if (i == 24) {
									for (var j = 0; j < arr[24].geometry.coordinates.length; j++) {
										for (var k = 0; k < arr[24].geometry.coordinates[0][0].length; k++) {
											polygon1.push([arr[24].geometry.coordinates[0][0][k][0], arr[24].geometry.coordinates[0][0][k][1]])
										}
									}
									for (var j = 0; j < arr[24].geometry.coordinates.length; j++) {
										for (var k = 0; k < arr[24].geometry.coordinates[1][0].length; k++) {
											polygon2.push([arr[24].geometry.coordinates[1][0][k][0], arr[24].geometry.coordinates[1][0][k][1]])
										}
									}
								} else if (i == 14) {
									for (var j = 0; j < arr[14].geometry.coordinates.length; j++) {
										for (var k = 0; k < arr[14].geometry.coordinates[0].length; k++) {
											polygon1.push([arr[14].geometry.coordinates[0][k][0], arr[14].geometry.coordinates[0][k][1]])
										}
									}
									for (var j = 0; j < arr[14].geometry.coordinates.length; j++) {
										for (var k = 0; k < arr[14].geometry.coordinates[1].length; k++) {
											polygon2.push([arr[14].geometry.coordinates[1][k][0], arr[14].geometry.coordinates[1][k][1]])
										}
									}
								} else {
									for (var j = 0; j < arr[i].geometry.coordinates.length; j++) {
										for (var k = 0; k < arr[i].geometry.coordinates[0].length; k++) {
											polygon1.push([arr[i].geometry.coordinates[0][k][0], arr[i].geometry.coordinates[0][k][1]])
										}
									}
								}
								var pt = turf.point = ([e.lnglat.lng, e.lnglat.lat]);
								var poly = turf.polygon([polygon1]);
								if (turf.booleanPointInPolygon(pt, poly)) {
									Street = arr[i].properties.JZNAME
								}
								if (polygon2.length !== 0) {
									var poly2 = turf.polygon([polygon2]);
									if (turf.booleanPointInPolygon(pt, poly2)) {
										Street = arr[i].properties.JZNAME
									}
								}
							}
							map.addOverLay(marker);
							$(".tdt-marker-icon").attr('src', 'images/dingwei.png');
							var infoWin1 = InfoWindow(searcRecord);
							marker.addEventListener("click", function() {
								marker.openInfoWindow(infoWin1)
							})
						})
					}
				})
			}
			

		}
	});
